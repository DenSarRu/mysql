Общее текстовое описание БД и решаемых ею задач.

Темой курсового проекта я выбрал сервис smartsarov.ru, изначально созданный для сбора, анализа и решения городских проблем.
Сервис позволяет наносить городские проблемы на карту с возможностью отслеживать все этапы решения.

В базе данных собираются следующие данные: пользователи системы (администраторы, исполнители, граждане), организации, проблемы, информация о ДТП, информация о земляных работах,
метеоданные, иные данные, которые не были рассмотрены в рамках данной работы.

Я выделил основные сущности, которые решил перенести на таблицы БД: 
  1. Пользователи (users): first_name, last_name, email, phone, address, user_status_id, created_at, updated_at;
  2. Организации (organizations): name, address, description, phone, email, created_at, updated_at;
  3. Проблемы (problems): problem_type_id, address, description, user_id , filename, problem_status_id, responsible_person, scheduled_at, created_at, updated_at;
  4. ДТП (traffic_accident): address, description, is_traffic_blocked, media, created_at, updated_at;
  5. Земляные работы (earthworks): id, organization_executor_id, address, description, start_date, end_date, created_at, updated_at
  6. Метеообстановка (weather_datas): date, time, air_temperature, atmospheric_pressure, humidity, wind_direction, radiation, water_level, light_level
  7. Статус пользователя (user_statuses): id, name -> пользователь, администратор, исполнитель, наблюдающий
  8. Статус проблемы (problems_statuses): id, name -> назначено, в работе, план, готово, удалено
  9. Тип проблемы (problem_types): id, name -> яма, брошенная машина, не убран снег, наказ депутату, благоустройство, пожарная безопасность, освещение, аварийные деревья, мусор, проблема жкх, бродячие животные, земляные работы, другая проблема.

Любой слой из рассматриваемого сервиса - это таблица в БД. Но слоев очень много, поэтому было принято решение ограничиться вышеуказанными.


В процессе работы с БД понял, что нужно доработать таблицы:
1. problems:
	- scheduled_at по умолчанию делать created_at плюс несколько дней, т.к. нужно время для обработки проблемы;
	- в scheduled_at проставлять значение NULL если проблема решена или готова;
	- нужен еще один столбец completed_at - по умолчанию NULL, но изменяется на CURRENT_DATE при решении или удалении проблемы. 
	  По нему потом можно перемещать в архив какие-либо записи, считать сроки решения проблем и т.д.;
2. problem_statuses:
	- необходимо добавить еще одно значение "проверяется";

3. т.к. сервис работает с проблемами и всё постоянно изменяется, то нужно добавить таблицу logs, в которую заносить данные. Над структурой таблицы и вносимыми данными нужно ещё поработать.
4. нужно создать две таблицы подтверждена (likes) или нет (dislikes) проблема.
